map() {
    for (( i = 2; i <= $#; i++ )); do
        echo "$($1 ${!i})"; done
}

filter() {
    for (( i = 2 ; i <= $# ; i++ )); do
        if $1 "${!i}"; then
            echo "${!i}"; fi; done
}

reduce() {
    local f=$1 r=$2; shift 2
    for elt in $@; do
        r=$($f $r $elt); done
    echo "$r"
}

# predicates

odd_pr() { (( $1 % 2 == 1 )); }

# monary operators

inc() { echo $(( $1 + 1 )); }
upcase() { echo "${1^^[[:alpha:]]}"; }
downcase() { echo "${1,,[[:alpha:]]}"; }

# binary operators

plus() { echo $(( $1 + $2 )); }
times() { echo $(( $1 * $2 )); }

# n-ary operators

sum() { reduce plus "$@"; }
multiply() { reduce times "$@"; }

# string utilities 

infix() {
    echo -n $2
    for (( i=3; i <= $#; i++ )); do
        echo -n "$1${!i}"; done
}
